<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thmsmlr</title>
    <description>a graveyard for my thoughts
</description>
    <link>http://thmsmlr.com/</link>
    <atom:link href="http://thmsmlr.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 17 Aug 2016 22:48:11 -0400</pubDate>
    <lastBuildDate>Wed, 17 Aug 2016 22:48:11 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Duct-Taping GitHub Pages</title>
        <description>&lt;p class=&quot;lead&quot;&gt;Batteries included can serve you well, but sometimes you just want more control.&lt;/p&gt;

&lt;p&gt;GitHub Pages provides an easy, free way to host a website.
However there are two flavours in which you can use GitHub pages, the &lt;a href=&quot;https://help.github.com/articles/using-a-static-site-generator-other-than-jekyll/&quot;&gt;manually&lt;/a&gt; way, or the &lt;a href=&quot;https://help.github.com/articles/about-github-pages-and-jekyll/&quot;&gt;batteries included&lt;/a&gt; way.&lt;/p&gt;

&lt;p&gt;The batteries included way is dead simple.
Using the open-source static site generator &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, GitHub will generate and deploy your site on push to &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; (or &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; if on project page).
This is a great solution that allow users to get up and running with a site quickly, but has some limitations.
Namely the ability to heavily customize your site.&lt;/p&gt;

&lt;p&gt;Suppose I wanted to modify Jekyll to generate blog posts from &lt;a href=&quot;http://jupyter.org/&quot;&gt;Jupyter Notebooks&lt;/a&gt;.
I could modify the Jekyll codebase, or write a plugin that could render the notebooks into blog posts.
This would work locally, but since the batteries included method doesn’t run any custom code, I would have no way of deploying.
For that reason I wrote a script to managed the deploys of my site manually.&lt;/p&gt;

&lt;p&gt;The principle is to keep your code and build branches clean and separated from each other while having meaningful links and relations guaranteed.
It allows you to customize the build of your site as much as you want while keeping the simplicity of GitHub pages.&lt;/p&gt;

&lt;p&gt;Here’s what I came up with:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e

&lt;span class=&quot;nv&quot;&gt;CURRENT_BRANCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git rev-parse --abbrev-ref HEAD&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CURRENT_BRANCH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ERROR! You can only deploy from jekyll branch&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLEAN_REPO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git status --porcelain&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CLEAN_REPO&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ERROR! Untracked changes in the repo, commit all changes before deploying&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;2
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UNPUSHED_COMMITS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git cherry -v&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$UNPUSHED_COMMITS&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ERROR! Unpushed commits on jekyll branch. Please push all commits before deploying&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;3
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CURRENT_SHA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git rev-parse HEAD&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Setting up clean build directory &amp;lt;=&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
rm -rf _site
git clone -b master git@github.com:thmsmlr/thmsmlr.github.io.git _site

&lt;span class=&quot;nb&quot;&gt;pushd &lt;/span&gt;_site
rm -rf &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git ls-tree --name-only master&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;popd

echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Building site &amp;lt;=&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
jekyll build
&lt;span class=&quot;nb&quot;&gt;pushd &lt;/span&gt;_site
git aa
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;date&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; (&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CURRENT_SHA&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Deploying site &amp;lt;=&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
git push origin master
&lt;span class=&quot;nb&quot;&gt;popd

echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Cleaning up &amp;lt;=&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
rm -rf _site
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;em&gt;that since I was building a &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user site&lt;/a&gt;, the GitHub Pages branch was the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch, my HEAD and code branch was the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; branch&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I had three goals with this script:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Each deploy should only have build files, no Jekyll code allowed!&lt;/li&gt;
  &lt;li&gt;Each build should link to the code commit from which it was generated&lt;/li&gt;
  &lt;li&gt;Code commits and build commits should always be in sync&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To achieve the first goal, I had to make a orphaned &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch which represented the lineage of compiled, deployed assets.
On deploy, the script would clone the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch into the build directory &lt;code class=&quot;highlighter-rouge&quot;&gt;_site/&lt;/code&gt;, nuke the current build, build the new site, commit the changes and push.
This would make sure that only the build in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site/&lt;/code&gt; directory would get pushed to master.
Furthermore, since it clones the repository on each build and nukes the files, this method ensures that we get clean diffs of what changed between builds.&lt;/p&gt;

&lt;p&gt;For the second goal, I took advantage of the fact that GitHub does &lt;a href=&quot;https://help.github.com/articles/autolinked-references-and-urls/#commit-shas&quot;&gt;auto-linking&lt;/a&gt; of commits, issues, and pull requests.
When the script pushes the new build to master, it does so with a commit message that contains the SHA of the latest code on the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; branch.
GitHub will automatically turn that into a link when viewing the code on their website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/github-deploy-commit-message.png&quot; alt=&quot;GitHub Deploy Commit Message&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, we make sure the commits are always sync’d by enforcing that there are no uncommitted changes in the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; branch before deploying.
Obviously you can manually mess things up, but it’s a good enough for now.&lt;/p&gt;

&lt;p&gt;This script will allow me to customize and complicate the build my site while maintaining some sanity in my builds.
Feel free to use this script as a basis for your own GitHub pages deployment, you’ll probably need to modify it quite heavily for your use case, but I think the idea behind it is simple enough.&lt;/p&gt;

&lt;p&gt;Hope you find it useful.&lt;/p&gt;

</description>
        <pubDate>Sun, 14 Aug 2016 10:34:03 -0400</pubDate>
        <link>http://thmsmlr.com/posts/duct-taping-github-pages</link>
        <guid isPermaLink="true">http://thmsmlr.com/posts/duct-taping-github-pages</guid>
        
        
      </item>
    
  </channel>
</rss>
